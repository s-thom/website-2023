---
import type { ImageBlockObjectResponse } from "@notionhq/client/build/src/api-endpoints";
import { getNotionImageInfo } from "../../../lib/notion/image";
import { richTextToUnformattedString } from "../../../lib/notion/util";
import DevOnly from "../../DevOnly.astro";
import { DEFAULT_IMAGE_DENSITIES } from "../../Images/constants";
import RichText from "../common/RichText.astro";
import Picture from "../../Images/Picture.astro";

export interface Props {
  block: ImageBlockObjectResponse;
}

const { block } = Astro.props;

const captionPlain = richTextToUnformattedString(block.image.caption);

const imageInfo = await getNotionImageInfo(
  block.id,
  [360, 540, 720],
  DEFAULT_IMAGE_DENSITIES,
);
---

<figure data-block={block.id} class="block-image">
  {
    imageInfo ? (
      <a class="picture-link" href={imageInfo.original.path} target="_blank">
        <Picture
          imageInfo={imageInfo}
          alt={captionPlain}
          sizes="(min-width: 750px) 720px,  100vw"
          loading="eager"
          linkToOriginal
        />
      </a>
    ) : (
      <DevOnly>
        image block {block.id} has unsupported image type {block.image.type}
      </DevOnly>
    )
  }
  {
    block.image.caption.length > 0 ? (
      <figcaption class="block-image-caption">
        <RichText components={block.image.caption} />
      </figcaption>
    ) : undefined
  }
</figure>

<style>
  .block-image {
    margin-inline-start: auto;
    margin-inline-end: auto;
    width: fit-content;
    max-width: calc(100% - (2 * var(--spacing-half)));
    padding: var(--spacing-half);
    overflow: hidden;
  }

  .block-image-caption {
    margin-top: var(--spacing-half);
    text-align: center;
    font-style: italic;
    color: var(--color-text-secondary);
  }
</style>
