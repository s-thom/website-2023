---
import type { CodeBlockObjectResponse } from "@notionhq/client/build/src/api-endpoints";
import { getCodeBlockContentInfo } from "../../../lib/shiki";
import CodeRenderer from "../../site/CodeRenderer.astro";

const loadAboutLinks = () =>
  import("../overrides/code-blocks/AboutLinks.astro").then((b) => b.default);
const loadBlogCollection = () =>
  import("../overrides/blog/BlogCollection.astro").then((b) => b.default);
const loadProjectsCollection = () =>
  import("../overrides/projects/ProjectsCollection.astro").then(
    (b) => b.default,
  );
const loadStickerBook = () =>
  import("../overrides/code-blocks/StickerBook.astro").then((b) => b.default);
const loadShaderPlayground = () =>
  import("../overrides/code-blocks/ShaderPlayground.astro").then(
    (b) => b.default,
  );
const loadTrunic = () =>
  import("../overrides/code-blocks/Trunic.astro").then((b) => b.default);
const loadStickerBookFeatureToggle = () =>
  import("../../stickers/StickerBookFeatureToggle.astro").then(
    (b) => b.default,
  );
const loadStickerBookFreeStickersUnlock = () =>
  import("../../stickers/StickerBookFreeStickersUnlock.astro").then(
    (b) => b.default,
  );
const loadStickerBookRarityList = () =>
  import("../../stickers/StickerBookRarityList.astro").then((b) => b.default);
const loadStickerBookUniqueUnlock = () =>
  import("../../stickers/StickerBookUniqueUnlock.astro").then((b) => b.default);
const loadStickerUnlock = () =>
  import("../../stickers/StickerUnlock.astro").then((b) => b.default);
const loadRawHTML = () =>
  import("../overrides/code-blocks/RawHTML.astro").then((b) => b.default);
const loadDefaultBlock = () =>
  import("./DefaultBlock.astro").then((b) => b.default);

export interface Props {
  block: CodeBlockObjectResponse;
}

const { block } = Astro.props;

const info = getCodeBlockContentInfo(block);

let Component: any;
if (info.type === "override") {
  switch (info.component) {
    case "AboutLinks":
      Component = await loadAboutLinks();
      break;
    case "BlogCollection":
      Component = await loadBlogCollection();
      break;
    case "ProjectsCollection":
      Component = await loadProjectsCollection();
      break;
    case "StickerBook":
      Component = await loadStickerBook();
      break;
    case "ShaderPlayground":
      Component = await loadShaderPlayground();
      break;
    case "StickerBookFeatureToggle":
      Component = await loadStickerBookFeatureToggle();
      break;
    case "StickerBookFreeStickersUnlock":
      Component = await loadStickerBookFreeStickersUnlock();
      break;
    case "StickerBookRarityList":
      Component = await loadStickerBookRarityList();
      break;
    case "StickerBookUniqueUnlock":
      Component = await loadStickerBookUniqueUnlock();
      break;
    case "StickerUnlock":
      Component = await loadStickerUnlock();
      break;
    case "Trunic":
      Component = await loadTrunic();
      break;
    case "RawHTML":
      Component = await loadRawHTML();
      break;
    default:
      Component = await loadDefaultBlock();
  }
}
---

{
  info.type === "override" && (
    <Component block={block} content={info.content} {...info.props} />
  )
}

{
  info.type === "code" && (
    <div class="block-code" data-block={block.id}>
      <CodeRenderer
        code={info.code}
        language={info.language}
        meta={info.meta}
      />
    </div>
  )
}

<style>
  .block-code {
    display: flex;
  }
</style>
