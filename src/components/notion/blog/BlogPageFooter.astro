---
import { type DatabaseObjectResponse } from "@notionhq/client/build/src/api-endpoints";
import { getCollection } from "astro:content";
import { BLOG_PAGE_ID } from "../../../lib/constants";
import StickerUnlock from "../../stickers/StickerUnlock.astro";
import BlogListPageItem from "./BlogListPageItem.astro";

export interface Props {
  page: DatabaseObjectResponse;
}

const { page } = Astro.props;

const blogIndexEntries = await getCollection(
  "pages",
  (entry) => entry.id === BLOG_PAGE_ID,
);
const blogEntries = await getCollection(
  "pages",
  (entry) => entry.data.properties.Type?.name === "blog",
);

// Get next/previous entries
let next: (typeof blogEntries)[number] | undefined;
let prev: (typeof blogEntries)[number] | undefined;
const index = blogEntries.findIndex((curr) => curr.id === page.id);
if (index !== -1) {
  if (index !== 0) {
    next = blogEntries[index - 1];
  }
  if (index !== blogEntries.length - 1) {
    prev = blogEntries[index + 1];
  }
}
---

<div class="blog-footer big-box-margin">
  <div class="links">
    <div class="links-box next">
      {
        next ? (
          <BlogListPageItem
            page={next.data.page}
            slug={next.data.slug}
            showTitle
          >
            <Fragment slot="info-top">
              <span class="pre-title">Next post</span>
            </Fragment>
          </BlogListPageItem>
        ) : (
          <StickerUnlock type="glowing-star" class="small-box small-box-border">
            <p slot="before">
              You've reached the end of this blog! While you wait for me to
              write more words, have a sticker for your collection.
            </p>
          </StickerUnlock>
        )
      }
    </div>
    <div class="links-box prev">
      {
        prev ? (
          <BlogListPageItem
            page={prev.data.page}
            slug={prev.data.slug}
            showTitle
          >
            <Fragment slot="info-top">
              <span class="pre-title">Previous post</span>
            </Fragment>
          </BlogListPageItem>
        ) : (
          <StickerUnlock
            type="chequered-flag"
            class="small-box small-box-border"
          >
            <p slot="before">
              You've reached the end of this blog! While you wait for me to
              write more words, have a sticker for your collection.
            </p>
          </StickerUnlock>
        )
      }
    </div>
    <div class="links-box up">
      {
        blogIndexEntries.length === 1 && (
          <BlogListPageItem
            page={blogIndexEntries[0].data.page}
            slug=""
            showTitle
          >
            <Fragment slot="info-top">
              <span class="pre-title">More posts</span>
            </Fragment>
          </BlogListPageItem>
        )
      }
    </div>
  </div>
</div>

<style>
  .links {
    display: grid;
    gap: var(--spacing);
    grid-template-columns: repeat(1, 1fr);
    grid-template-areas:
      "next"
      "prev"
      "up";
  }

  .links-box {
    position: relative;
  }

  .next {
    grid-area: next;
  }
  .prev {
    grid-area: prev;
  }
  .up {
    grid-area: up;
  }

  @media (min-width: 900px) {
    .links {
      grid-template-columns: repeat(2, 1fr);
      grid-template-areas:
        "prev next"
        "up up";
    }
  }

  .pre-title {
    align-self: flex-start;
    font-size: var(--size-step-min1);
    font-style: italic;
    color: var(--color-text-header);
  }
</style>
