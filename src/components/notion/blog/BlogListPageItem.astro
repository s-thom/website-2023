---
import type { DatabaseObjectResponse } from "@notionhq/client/build/src/api-endpoints";
import { getInfoForPage } from "../../../lib/notion/caches";
import { getPageTitleComponents } from "../../../lib/notion/titles";
import { getPagePropertyByName } from "../../../lib/notion/util";
import NotionBackdrop from "../common/NotionBackdrop.astro";
import NotionIcon from "../common/NotionIcon.astro";
import RichText from "../common/RichText.astro";
import NotionProperty from "../properties/NotionProperty.astro";

export interface Props {
  page: DatabaseObjectResponse;
  showTitle?: boolean;
  showIcon?: boolean;
  showTags?: boolean;
}

const { page, showTitle, showIcon, showTags } = Astro.props;

const info = await getInfoForPage(page.id);
const titleComponents = getPageTitleComponents(page);

const tagsProperty = getPagePropertyByName(page, "Tags", "multi_select") ?? {
  id: "mock",
  multi_select: [],
  type: "multi_select",
  object: "property_item",
};
---

<a href={info.path} class="page-item">
  <div class="backdrop-container">
    <NotionBackdrop
      page={page}
      widths={[1920, 1440, 960, 720, 540, 360]}
      sizes="(min-width: 900) 540px, 100vw"
      shade
    />
  </div>
  <div class="info">
    <slot name="info-top" />
    {
      showIcon && page.icon && (
        <NotionIcon
          id={`${page.id}-icon`}
          icon={page.icon}
          class="icon"
          alt=""
          widths={[80, 160]}
          sizes="80px"
          loading="eager"
        />
      )
    }
    {
      showTitle && (
        <h3 class="title">
          <RichText components={titleComponents} />
        </h3>
      )
    }
    {
      showTags && (
        <div class="tags">
          <NotionProperty property={tagsProperty} />
        </div>
      )
    }
  </div>
</a>

<style>
  .page-item {
    display: block;
    position: relative;
    min-height: 50px;
    height: 100%;
    overflow: hidden;
    border-radius: var(--border-radius);
    text-decoration: none;
    transition: scale var(--transition-duration) ease-in-out;
  }

  .page-item:hover {
    scale: 1.02;
  }

  .page-item:hover .title {
    text-decoration: underline;
  }

  .backdrop-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    overflow: hidden;
  }

  .info {
    position: relative;
    height: 100%;
    z-index: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;
    gap: var(--spacing-half);
    padding: var(--spacing);
    color: var(--color-text-header);
  }

  .info :global(.icon) {
    width: calc(var(--spacing) * 5);
    height: calc(var(--spacing) * 5);
    border-radius: 50%;
    overflow: hidden;
    background-color: var(--color-text-header);
  }

  .tags {
    justify-self: end;
  }
</style>
