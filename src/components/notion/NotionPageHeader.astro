---
import type {
  DatabaseObjectResponse,
  PageObjectResponse,
} from "@notionhq/client/build/src/api-endpoints";
import { estimateReadingTime } from "../../lib/notion/readingTime";
import { getPageTitleComponents } from "../../lib/notion/titles";
import {
  getPagePropertyByName,
  richTextToUnformattedString,
} from "../../lib/notion/util";
import RichText from "./common/RichText.astro";
import NotionProperty from "./properties/NotionProperty.astro";
import type { BlockInfo } from "../../integrations/notion-loader/api";

export interface Props {
  page: DatabaseObjectResponse | PageObjectResponse;
  blockMap: Record<string, BlockInfo>;
  showCoverSource?: boolean;
  showReadingTime?: boolean;
  showPublishEditDates?: boolean;
}

const {
  page,
  blockMap,
  showCoverSource,
  showReadingTime,
  showPublishEditDates,
} = Astro.props;

const titleComponents = getPageTitleComponents(page);

const coverSourceProperty = getPagePropertyByName(
  page,
  "Cover Source",
  "rich_text",
);
const publishedDateProperty = getPagePropertyByName(page, "Published", "date");
const editedDateProperty = getPagePropertyByName(page, "Edited", "date");

let readingTimeInfo:
  | Awaited<ReturnType<typeof estimateReadingTime>>
  | undefined;
if (showReadingTime) {
  readingTimeInfo = await estimateReadingTime(page, blockMap);
}
---

<div class="page-header">
  <h1 class="page-title">
    <RichText components={titleComponents} />
  </h1>
  <div class="summary-info">
    {
      showReadingTime && readingTimeInfo && (
        <div class="read-time">
          Estimated reading time: {readingTimeInfo.minutes} minutes
        </div>
      )
    }
    {
      showCoverSource &&
        coverSourceProperty &&
        richTextToUnformattedString(coverSourceProperty.rich_text) !== "" && (
          <div class="cover-source">
            Cover image source:{" "}
            <NotionProperty property={coverSourceProperty} />
          </div>
        )
    }
    {
      showPublishEditDates &&
        publishedDateProperty &&
        publishedDateProperty.date !== null && (
          <div class="date-info">
            Published: <NotionProperty property={publishedDateProperty} />
          </div>
        )
    }
    {
      showPublishEditDates &&
        editedDateProperty &&
        editedDateProperty.date !== null && (
          <div class="date-info">
            Edited: <NotionProperty property={editedDateProperty} />
          </div>
        )
    }
  </div>
</div>

<style>
  .page-title {
    word-break: break-word;
  }
</style>
