---
import type {
  DatabaseObjectResponse,
  PageObjectResponse,
} from "@notionhq/client/build/src/api-endpoints";
import type { BlockMap } from "../../integrations/notion-loader/api";
import { estimateReadingTime } from "../../lib/notion/readingTime";
import { getPageTitleComponents } from "../../lib/notion/titles";
import {
  getPagePropertyByName,
  richTextToUnformattedString,
} from "../../lib/notion/util";
import RichText from "./common/RichText.astro";
import NotionProperty from "./properties/NotionProperty.astro";

export interface Props {
  page: DatabaseObjectResponse | PageObjectResponse;
  blockMap: BlockMap;
  showCoverSource?: boolean;
  showReadingTime?: boolean;
  showPublishEditDates?: boolean;
}

const {
  page,
  blockMap,
  showCoverSource,
  showReadingTime,
  showPublishEditDates,
} = Astro.props;

const titleComponents = getPageTitleComponents(page);

const coverSourceProperty = getPagePropertyByName(
  page,
  "Cover Source",
  "rich_text",
);
const publishedDateProperty = getPagePropertyByName(page, "Published", "date");
const editedDateProperty = getPagePropertyByName(page, "Edited", "date");

let readingTimeInfo: ReturnType<typeof estimateReadingTime> | undefined;
if (showReadingTime) {
  readingTimeInfo = estimateReadingTime(page, blockMap);
}
---

<div class="page-header">
  <h1 class="page-title">
    <RichText components={titleComponents} />
  </h1>
  <div class="summary-info">
    {
      showReadingTime && readingTimeInfo && (
        <div class="read-time">
          <span class="info-key">Estimated reading time:</span>{" "}
          <span class="info-value">{readingTimeInfo.minutes} minutes</span>
        </div>
      )
    }
    {
      showCoverSource &&
        coverSourceProperty &&
        richTextToUnformattedString(coverSourceProperty.rich_text) !== "" && (
          <div class="cover-source">
            <span class="info-key">Cover image source:</span>{" "}
            <span class="info-value">
              <NotionProperty property={coverSourceProperty} />
            </span>
          </div>
        )
    }
    {
      showPublishEditDates &&
        publishedDateProperty &&
        publishedDateProperty.date !== null && (
          <div class="date-info">
            <span class="info-key">Published:</span>{" "}
            <span class="info-value">
              <NotionProperty property={publishedDateProperty} />
            </span>
          </div>
        )
    }
    {
      showPublishEditDates &&
        editedDateProperty &&
        editedDateProperty.date !== null && (
          <div class="date-info">
            <span class="info-key">Edited:</span>{" "}
            <span class="info-value">
              <NotionProperty property={editedDateProperty} />
            </span>
          </div>
        )
    }
  </div>
</div>

<style>
  .page-title {
    word-break: break-word;
    font-weight: 800;
  }

  .info-key {
    font-weight: 400;
  }

  .info-value {
    font-weight: 300;
  }
</style>
