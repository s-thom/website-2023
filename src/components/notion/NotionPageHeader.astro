---
import type {
  DatabaseObjectResponse,
  PageObjectResponse,
} from "@notionhq/client/build/src/api-endpoints";
import { getPageTitleComponents } from "../../lib/notion/titles";
import { getPagePropertyByName } from "../../lib/notion/util";
import { estimateReadingTime } from "../../lib/notion/readingTime";
import NotionIcon from "./common/NotionIcon.astro";
import RichText from "./common/RichText.astro";
import NotionProperty from "./properties/NotionProperty.astro";

export interface Props {
  page: DatabaseObjectResponse | PageObjectResponse;
  showCoverSource?: boolean;
  showReadingTime?: boolean;
  showPublishEditDates?: boolean;
}

const { page, showCoverSource, showReadingTime, showPublishEditDates } =
  Astro.props;

const titleComponents = getPageTitleComponents(page);

const coverSourceProperty = getPagePropertyByName(
  page,
  "Cover Source",
  "rich_text",
);
const publishedDateProperty = getPagePropertyByName(page, "Published", "date");
const editedDateProperty = getPagePropertyByName(page, "Edited", "date");

let readingTimeInfo:
  | Awaited<ReturnType<typeof estimateReadingTime>>
  | undefined;
if (showReadingTime) {
  readingTimeInfo = await estimateReadingTime(page);
}
---

<div class="page-header">
  <h1 class="page-title">
    <RichText components={titleComponents} />
  </h1>
  {
    page.icon && (
      <NotionIcon
        id={`${page.id}-icon`}
        icon={page.icon}
        class="page-icon"
        alt=""
        widths={[64, 96, 128]}
        sizes="(min-width: 1200px) 128px, (min-width: 900px) 96px, 64px"
        loading="eager"
      />
    )
  }
  <div class="summary-info">
    {
      showReadingTime && readingTimeInfo && (
        <div class="read-time">
          Estimated reading time: {readingTimeInfo.minutes} minutes
        </div>
      )
    }
    {
      showPublishEditDates &&
        publishedDateProperty &&
        publishedDateProperty.date !== null && (
          <div class="date-info">
            Published: <NotionProperty property={publishedDateProperty} />
          </div>
        )
    }
    {
      showPublishEditDates &&
        editedDateProperty &&
        editedDateProperty.date !== null && (
          <div class="date-info">
            Edited: <NotionProperty property={editedDateProperty} />
          </div>
        )
    }
    {
      showCoverSource &&
        coverSourceProperty &&
        coverSourceProperty.rich_text.plain_text && (
          <div class="cover-source">
            Cover image source:{" "}
            <NotionProperty property={coverSourceProperty} />
          </div>
        )
    }
  </div>
</div>

<style>
  .page-header {
    position: relative;
    color: var(--color-text);
    padding: var(--spacing) 0;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: var(--spacing);
    text-align: center;
  }

  @media (min-width: 1500px) {
    .page-header {
      color: var(--color-text-header);
    }

    .page-title {
      text-shadow: 0px 0px 3px rgba(0 0 0 / 0.4);
    }

    .page-header:not(:has(.page-icon)) .page-title {
      min-height: 175px; /* Prevent info text from overlapping with background */
    }
  }

  .page-header .page-icon {
    position: absolute;
    bottom: 100%;

    background-color: var(--color-text-header);
    box-shadow: 0px 2px 4px 3px rgba(0 0 0 / 0.1);
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
    margin: auto;
    border-radius: 50%;
  }

  @media (min-width: 900px) {
    .page-header .page-icon {
      width: calc(var(--spacing) * 6);
      height: calc(var(--spacing) * 6);
    }
  }

  @media (min-width: 1200px) {
    .page-header .page-icon {
      width: calc(var(--spacing) * 8);
      height: calc(var(--spacing) * 8);
    }
  }

  @media (min-width: 1500px) {
    .page-header .page-icon {
      position: relative;
      bottom: initial;
    }
  }

  .summary-info {
    width: 100%;
    display: grid;
    gap: var(--spacing-half);
    font-size: var(--size-step-min1);
    color: var(--color-text-secondary);
    text-align: center;
  }

  @media (min-width: 900px) {
    .summary-info {
      grid-template-columns: repeat(2, 1fr);
    }

    .read-time,
    .cover-source {
      text-align: start;
      grid-column: 1;
    }

    .date-info {
      text-align: end;
      grid-column: 2;
    }
  }
</style>
