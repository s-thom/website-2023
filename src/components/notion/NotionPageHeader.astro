---
import type {
  DatabaseObjectResponse,
  PageObjectResponse,
} from "@notionhq/client/build/src/api-endpoints";
import { getPageTitleComponents } from "../../lib/notion/titles";
import {
  getPagePropertyByName,
  richTextToUnformattedString,
} from "../../lib/notion/util";
import { estimateReadingTime } from "../../lib/notion/readingTime";
import NotionIcon from "./common/NotionIcon.astro";
import RichText from "./common/RichText.astro";
import NotionProperty from "./properties/NotionProperty.astro";

export interface Props {
  page: DatabaseObjectResponse | PageObjectResponse;
  showCoverSource?: boolean;
  showReadingTime?: boolean;
  showPublishEditDates?: boolean;
}

const { page, showCoverSource, showReadingTime, showPublishEditDates } =
  Astro.props;

const titleComponents = getPageTitleComponents(page);

const coverSourceProperty = getPagePropertyByName(
  page,
  "Cover Source",
  "rich_text",
);
const publishedDateProperty = getPagePropertyByName(page, "Published", "date");
const editedDateProperty = getPagePropertyByName(page, "Edited", "date");

let readingTimeInfo:
  | Awaited<ReturnType<typeof estimateReadingTime>>
  | undefined;
if (showReadingTime) {
  readingTimeInfo = await estimateReadingTime(page);
}
---

<div class="page-header">
  <h1 class="page-title">
    <RichText components={titleComponents} />
  </h1>
  {
    page.icon && (
      <NotionIcon
        id={`${page.id}-icon`}
        icon={page.icon}
        class="page-icon"
        alt=""
        widths={[64, 96, 128]}
        sizes="(min-width: 1200px) 128px, (min-width: 900px) 96px, 64px"
        loading="eager"
      />
    )
  }
  <div class="summary-info">
    {
      showReadingTime && readingTimeInfo && (
        <div class="read-time">
          Estimated reading time: {readingTimeInfo.minutes} minutes
        </div>
      )
    }
    {
      showCoverSource &&
        coverSourceProperty &&
        richTextToUnformattedString(coverSourceProperty.rich_text) !== "" && (
          <div class="cover-source">
            Cover image source:{" "}
            <NotionProperty property={coverSourceProperty} />
          </div>
        )
    }
    {
      showPublishEditDates &&
        publishedDateProperty &&
        publishedDateProperty.date !== null && (
          <div class="date-info">
            Published: <NotionProperty property={publishedDateProperty} />
          </div>
        )
    }
    {
      showPublishEditDates &&
        editedDateProperty &&
        editedDateProperty.date !== null && (
          <div class="date-info">
            Edited: <NotionProperty property={editedDateProperty} />
          </div>
        )
    }
  </div>
</div>
