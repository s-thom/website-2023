---
import type {
  DatabaseObjectResponse,
  PageObjectResponse,
} from "@notionhq/client/build/src/api-endpoints";
import clsx from "clsx";
import { getNotionImageInfo } from "../../../lib/notion/image";
import { DEFAULT_IMAGE_DENSITIES } from "../../Images/constants";
import Picture from "../../Images/Picture.astro";
import DefaultPageBackdrop from "../../site/DefaultPageBackdrop.astro";
import ShaderBackdrop from "../../site/ShaderBackdrop.astro";

export interface Props {
  page: DatabaseObjectResponse | PageObjectResponse;
  shader?: { enabled: boolean };
  widths: number[];
  noIntrinsicWidth?: boolean;
  sizes: string;
  class?: string;
}

const {
  page,
  shader,
  widths,
  noIntrinsicWidth,
  sizes = "100vw",
  class: className,
} = Astro.props;

const imageClasses = clsx(className, "notion-backdrop-image");

const imageInfo = page.cover
  ? await getNotionImageInfo(
      `${page.id}-cover`,
      page.cover,
      widths,
      DEFAULT_IMAGE_DENSITIES,
    )
  : undefined;
---

<div class="notion-backdrop">
  {
    imageInfo ? (
      <Picture
        imageInfo={imageInfo}
        alt=""
        class={imageClasses}
        noIntrinsicWidth={noIntrinsicWidth}
        sizes={sizes}
        loading="eager"
      />
    ) : (
      <DefaultPageBackdrop class={className} />
    )
  }
  {shader?.enabled && <ShaderBackdrop imageUrl={imageInfo?.original.path} />}
</div>
