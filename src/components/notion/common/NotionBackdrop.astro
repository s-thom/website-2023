---
import type {
  DatabaseObjectResponse,
  PageObjectResponse,
} from "@notionhq/client/build/src/api-endpoints";
import clsx from "clsx";
import DefaultPageBackdrop from "../../site/DefaultPageBackdrop.astro";
import NotionImage from "./NotionImage.astro";

// The backdrop images are always blurred, so we can afford to load lower
// quality images. A "width" of 360 pixels will load the 720 wide image
// on 2x density displays.
const SIZES_DEFAULT_SHADED = "360px";
const SIZES_DEFAULT_UNSHADED = "100vw";

export interface Props {
  page: DatabaseObjectResponse | PageObjectResponse;
  shade?: boolean;
  widths: number[];
  sizes: string;
  class?: string;
}

const {
  page,
  shade,
  widths,
  sizes = shade ? SIZES_DEFAULT_SHADED : SIZES_DEFAULT_UNSHADED,
  class: className,
} = Astro.props;

const shouldIncludeShade = !!(page.cover && shade);
const imageClasses = clsx(
  className,
  "notion-backdrop-image",
  shouldIncludeShade && "notion-backdrop-image-blur",
);
---

<div class="notion-backdrop">
  {
    page.cover ? (
      <NotionImage
        id={`${page.id}-cover`}
        image={page.cover}
        alt=""
        class={imageClasses}
        widths={widths}
        sizes={sizes}
        loading="eager"
      />
    ) : (
      <DefaultPageBackdrop class={className} />
    )
  }
  {shouldIncludeShade && <div class="shade" />}
</div>

<style>
  .notion-backdrop {
    display: contents;
  }
  .notion-backdrop > :global(*),
  .notion-backdrop :global(.notion-backdrop-image) {
    height: 100%;
    width: 100%;
    max-width: initial;
    object-fit: cover;
    object-position: center;
  }

  .notion-backdrop :global(.notion-backdrop-image.notion-backdrop-image-blur) {
    filter: blur(2px);
    transform: scale(
      103%
    ); /* Quick hack so that the blur's edges aren't visible */
  }

  .shade {
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    position: absolute;
    background-color: rgba(0, 0, 0, 0.6);
  }
</style>
