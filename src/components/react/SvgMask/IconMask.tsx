import type { PRNG } from "seedrandom";
import type { Point2 } from "./types";

const ICON_MIN_TRANSLATE_X = 0.3;
const ICON_MAX_TRANSLATE_X = 0.75;
const ICON_MIN_TRANSLATE_Y = 0;
const ICON_MAX_TRANSLATE_Y = 0.1;
const ICON_MIN_ROTATE = 5;
const ICON_MAX_ROTATE = 30;

// Icons from:
// - https://fonts.google.com/icons
// - https://materialdesignicons.com
const ICON_PATHS = {
  docker: {
    size: 256,
    d: "M250.72 70.5c-5.77-4-18.98-5.5-29.3-3.5-1.2-10-6.73-18.75-16.34-26.5l-5.53-4-3.84 5.75c-4.8 7.5-7.2 18-6.48 28a33.4 33.4 0 0 0 5.04 15.25c-3.36 2-10.33 4.5-19.46 4.5H1.15l-.48 2C-1 102-1 133.24 18.7 157.24c14.9 18.25 36.99 27.5 66.05 27.5 62.93 0 109.53-30.25 131.39-85 8.64.26 27.14 0 36.5-18.74.25-.5.73-1.5 2.4-5.25l.97-2-5.28-3.25ZM139.99 0h-26.42v25h26.42V0Zm0 30h-26.42v25h26.42V30Zm-31.23 0H82.34v25h26.42V30Zm-31.22 0H51.12v25h26.42V30ZM46.3 60H19.9v25h26.42V60Zm31.23 0H51.12v25h26.42V60Zm31.22 0H82.34v25h26.42V60ZM140 60h-26.42v25h26.42V60Zm31.22 0H144.8v25h26.42V60Z",
  },
  gamepad: {
    size: 24,
    d: "M16.5,9L13.5,12L16.5,15H22V9M9,16.5V22H15V16.5L12,13.5M7.5,9H2V15H7.5L10.5,12M15,7.5V2H9V7.5L12,10.5L15,7.5Z",
  },
  git: {
    size: 256,
    d: "M251.172245,116.593517 L139.398753,4.82845302 C132.966433,-1.60948434 122.525852,-1.60948434 116.085106,4.82845302 L92.8753863,28.0381721 L122.317995,57.4807809 C129.16041,55.1690784 137.005593,56.7195763 142.460425,62.1744081 C147.940536,67.6629464 149.479799,75.5755422 147.111919,82.4404282 L175.487156,110.815665 C182.352042,108.450594 190.273064,109.98143 195.755985,115.472777 C203.418591,123.132574 203.418591,135.547794 195.755985,143.213209 C188.09057,150.878624 175.67535,150.878624 168.007126,143.213209 C162.243319,137.443783 160.81922,128.977839 163.737639,121.877008 L137.275245,95.4146135 L137.272436,165.052198 C139.140337,165.979126 140.904309,167.212221 142.460425,168.762719 C150.123031,176.422516 150.123031,188.837736 142.460425,196.508768 C134.79501,204.171375 122.374173,204.171375 114.719993,196.508768 C107.057387,188.837736 107.057387,176.422516 114.719993,168.762719 C116.613174,166.872347 118.804095,165.442631 121.141077,164.481996 L121.141077,94.1955625 C118.804095,93.2405457 116.615983,91.8192558 114.719993,89.9148396 C108.914052,84.1173254 107.518042,75.5980132 110.492639,68.4690928 L81.4713611,39.4421974 L4.83125614,116.076685 C-1.60949009,122.52024 -1.60949009,132.960821 4.83125614,139.398759 L116.604747,251.166631 C123.039876,257.604569 133.477648,257.604569 139.921203,251.166631 L251.172245,139.9184 C257.61018,133.477654 257.61018,123.031455 251.172245,116.593517",
  },
  "js-function": {
    size: 24,
    d: "M4.177 16.699q-.483 0-.775-.28-.28-.279-.28-.749 0-.495.28-.787.292-.292.775-.292.482 0 .762.292.292.292.292.787 0 .47-.292.75-.28.279-.762.279zM14.146 18.096q-1.803-.445-2.806-1.753-1.004-1.308-1.004-3.2v-2.286q0-1.245.458-2.248.47-1.016 1.32-1.714.864-.699 2.032-.991v1.08q-.812.19-1.41.736-.596.534-.926 1.334-.33.8-.33 1.803v2.286q0 .978.317 1.778.33.8.927 1.334.61.52 1.422.71zM17.067 18.096v-1.13q.826-.19 1.423-.711.597-.534.914-1.334.33-.8.33-1.778v-2.286q0-1.003-.33-1.803t-.927-1.334q-.597-.546-1.41-.736v-1.08q1.181.292 2.032.99.851.7 1.308 1.715.47 1.003.47 2.248v2.286q0 1.892-1.003 3.2-1.003 1.308-2.807 1.753z",
  },
  kubernetes: {
    size: 210,
    d: "M134.358 126.466a3.59 3.59 0 0 0-.855-.065 3.685 3.685 0 0 0-1.425.37 3.725 3.725 0 0 0-1.803 4.825l-.026.037 8.528 20.603a43.53 43.53 0 0 0 17.595-22.102l-21.976-3.714zm-34.194 2.92a3.72 3.72 0 0 0-3.568-2.894 3.656 3.656 0 0 0-.733.065l-.037-.045-21.785 3.698a43.695 43.695 0 0 0 17.54 21.946l8.442-20.4-.066-.08a3.683 3.683 0 0 0 .207-2.29zm18.245 8a3.718 3.718 0 0 0-6.557.008h-.018l-10.713 19.372a43.637 43.637 0 0 0 23.815 1.225q2.197-.5 4.292-1.2l-10.738-19.406zm33.914-45-16.483 14.753.009.047a3.725 3.725 0 0 0 1.46 6.395l.02.089 21.35 6.15a44.278 44.278 0 0 0-6.356-27.432zM121.7 94.039a3.725 3.725 0 0 0 5.913 2.84l.065.027 18.036-12.788a43.85 43.85 0 0 0-25.287-12.19l1.253 22.105zm-19.1 2.921a3.72 3.72 0 0 0 5.904-2.85l.092-.043 1.253-22.14a44.682 44.682 0 0 0-4.501.776 43.467 43.467 0 0 0-20.937 11.409l18.154 12.869zm-9.678 16.729a3.72 3.72 0 0 0 1.462-6.396l.018-.088-16.574-14.824a43.454 43.454 0 0 0-6.168 27.51l21.245-6.13zm16.098 6.512 6.114 2.94 6.096-2.934 1.514-6.581-4.219-5.276h-6.79l-4.231 5.268zm107.188 12.966-17.422-75.675a13.602 13.602 0 0 0-7.293-9.073l-70.521-33.67a13.589 13.589 0 0 0-11.705 0L38.76 48.437a13.598 13.598 0 0 0-7.295 9.072l-17.394 75.673a13.315 13.315 0 0 0-.004 5.81 13.506 13.506 0 0 0 .491 1.718 13.1 13.1 0 0 0 1.343 2.726c.239.365.491.72.765 1.064l48.804 60.678c.213.264.448.505.681.75a13.423 13.423 0 0 0 2.574 2.133 13.924 13.924 0 0 0 3.857 1.677 13.298 13.298 0 0 0 3.43.473h.759l77.504-.018a12.993 12.993 0 0 0 1.41-.083 13.47 13.47 0 0 0 1.989-.378 13.872 13.872 0 0 0 1.381-.442c.353-.135.705-.27 1.045-.433a13.941 13.941 0 0 0 1.479-.822 13.303 13.303 0 0 0 3.237-2.865l1.488-1.85 47.299-58.84a13.185 13.185 0 0 0 2.108-3.785 13.67 13.67 0 0 0 .5-1.724 13.282 13.282 0 0 0-.004-5.81zm-73.147 29.432a14.516 14.516 0 0 0 .703 1.703 3.314 3.314 0 0 0-.327 2.49 39.372 39.372 0 0 0 3.742 6.7 35.06 35.06 0 0 1 2.263 3.364c.17.315.392.803.553 1.136a4.24 4.24 0 1 1-7.63 3.607c-.161-.33-.385-.77-.522-1.082a35.275 35.275 0 0 1-1.225-3.868 39.305 39.305 0 0 0-2.896-7.097 3.335 3.335 0 0 0-2.154-1.307c-.135-.233-.635-1.15-.903-1.623a54.617 54.617 0 0 1-38.948-.1l-.955 1.73a3.429 3.429 0 0 0-1.819.887 29.517 29.517 0 0 0-3.268 7.582 34.9 34.9 0 0 1-1.218 3.868c-.135.31-.361.744-.522 1.073v.009l-.007.008a4.238 4.238 0 1 1-7.619-3.616c.159-.335.372-.82.54-1.135a35.177 35.177 0 0 1 2.262-3.373 41.228 41.228 0 0 0 3.82-6.866 4.188 4.188 0 0 0-.376-2.387l.768-1.84a54.922 54.922 0 0 1-24.338-30.387l-1.839.313a4.68 4.68 0 0 0-2.428-.855 39.524 39.524 0 0 0-7.356 2.165 35.589 35.589 0 0 1-3.787 1.45c-.305.084-.745.168-1.093.244-.028.01-.052.022-.08.029a.605.605 0 0 1-.065.006 4.236 4.236 0 1 1-1.874-8.224l.061-.015.037-.01c.353-.083.805-.2 1.127-.262a35.27 35.27 0 0 1 4.05-.326 39.388 39.388 0 0 0 7.564-1.242 5.835 5.835 0 0 0 1.814-1.83l1.767-.516a54.613 54.613 0 0 1 8.613-38.073l-1.353-1.206a4.688 4.688 0 0 0-.848-2.436 39.366 39.366 0 0 0-6.277-4.41 35.25 35.25 0 0 1-3.499-2.046c-.256-.191-.596-.478-.874-.704l-.063-.044a4.473 4.473 0 0 1-1.038-6.222 4.066 4.066 0 0 1 3.363-1.488 5.03 5.03 0 0 1 2.942 1.11c.287.225.68.526.935.745a35.253 35.253 0 0 1 2.78 2.95 39.383 39.383 0 0 0 5.69 5.142 3.333 3.333 0 0 0 2.507.243q.754.55 1.522 1.082A54.289 54.289 0 0 1 102.86 61.89a55.052 55.052 0 0 1 7.63-1.173l.1-1.784a4.6 4.6 0 0 0 1.37-2.184 39.476 39.476 0 0 0-.47-7.654 35.466 35.466 0 0 1-.576-4.014c-.011-.307.006-.731.01-1.081 0-.04-.01-.08-.01-.118a4.242 4.242 0 1 1 8.441-.004c0 .37.022.86.009 1.2a35.109 35.109 0 0 1-.579 4.013 39.533 39.533 0 0 0-.478 7.656 3.344 3.344 0 0 0 1.379 2.11c.015.305.065 1.323.102 1.884a55.309 55.309 0 0 1 35.032 16.927l1.606-1.147a4.69 4.69 0 0 0 2.56-.278 39.532 39.532 0 0 0 5.69-5.148 35.004 35.004 0 0 1 2.787-2.95c.259-.222.65-.52.936-.746a4.242 4.242 0 1 1 5.258 6.598c-.283.229-.657.548-.929.75a35.095 35.095 0 0 1-3.507 2.046 39.495 39.495 0 0 0-6.277 4.41 3.337 3.337 0 0 0-.792 2.39c-.235.216-1.06.947-1.497 1.343a54.837 54.837 0 0 1 8.792 37.983l1.704.496a4.745 4.745 0 0 0 1.82 1.83 39.464 39.464 0 0 0 7.568 1.246 35.64 35.64 0 0 1 4.046.324c.355.065.868.207 1.23.29a4.236 4.236 0 1 1-1.878 8.223l-.061-.008c-.028-.007-.054-.022-.083-.03-.348-.075-.785-.151-1.09-.231a35.14 35.14 0 0 1-3.785-1.462 39.477 39.477 0 0 0-7.363-2.165 3.337 3.337 0 0 0-2.362.877q-.9-.171-1.804-.316a54.92 54.92 0 0 1-24.328 30.605z",
  },
  react: {
    size: 256,
    d: "M210.48 73.82c-2.65-.91-5.4-1.78-8.24-2.6.47-1.9.9-3.77 1.28-5.61 6.23-30.29 2.16-54.68-11.77-62.71-13.36-7.7-35.2.33-57.26 19.52-2.12 1.85-4.25 3.8-6.37 5.85a155.87 155.87 0 0 0-4.24-3.92C100.76 3.83 77.58-4.82 63.68 3.23 50.32 10.96 46.37 33.9 51.98 62.6c.55 2.77 1.18 5.6 1.9 8.48-3.28.93-6.45 1.92-9.48 2.98C17.31 83.5 0 98.3 0 113.67c0 15.86 18.58 31.78 46.81 41.43 2.23.76 4.54 1.48 6.92 2.16-.77 3.11-1.44 6.16-2 9.14-5.36 28.2-1.18 50.59 12.13 58.26 13.74 7.93 36.8-.22 59.27-19.85 1.78-1.55 3.56-3.2 5.34-4.92 2.32 2.22 4.63 4.33 6.92 6.31 21.76 18.72 43.25 26.28 56.54 18.59 13.73-7.95 18.2-32 12.4-61.27-.44-2.24-.96-4.52-1.53-6.84 1.62-.48 3.2-.98 4.76-1.5 29.35-9.72 48.44-25.43 48.44-41.51 0-15.42-17.87-30.33-45.52-39.85Zm-6.36 70.99c-1.4.46-2.84.9-4.3 1.34a256.51 256.51 0 0 0-12.97-32.43c5.11-11 9.31-21.77 12.46-31.96 2.62.76 5.16 1.56 7.61 2.4 23.7 8.16 38.14 20.22 38.14 29.5 0 9.9-15.6 22.75-40.94 31.15Zm-10.52 20.83c2.57 12.94 2.93 24.64 1.23 33.79-1.52 8.22-4.59 13.7-8.38 15.9-8.07 4.66-25.32-1.4-43.92-17.42-2.14-1.84-4.29-3.8-6.44-5.87a256.93 256.93 0 0 0 21.46-27.25c12.37-1.1 24.06-2.89 34.67-5.34.52 2.1.98 4.17 1.38 6.2ZM87.28 214.51c-7.89 2.79-14.16 2.87-17.96.68-8.07-4.66-11.43-22.64-6.85-46.75.52-2.76 1.15-5.6 1.87-8.5a257.2 257.2 0 0 0 34.5 5 266.23 266.23 0 0 0 21.97 27.14 134.67 134.67 0 0 1-4.88 4.5c-9.93 8.68-19.88 14.84-28.65 17.93Zm-36.93-69.76c-12.48-4.27-22.8-9.81-29.86-15.87-6.35-5.43-9.55-10.83-9.55-15.21 0-9.32 13.9-21.21 37.07-29.3 2.81-.98 5.76-1.9 8.81-2.77 3.2 10.42 7.41 21.32 12.48 32.33a266.44 266.44 0 0 0-12.63 32.8c-2.18-.63-4.3-1.29-6.32-1.98Zm12.38-84.26c-4.81-24.59-1.62-43.14 6.42-47.8 8.57-4.95 27.5 2.12 47.46 19.84 1.28 1.14 2.56 2.32 3.85 3.55a261.98 261.98 0 0 0-21.81 26.99 267.29 267.29 0 0 0-34.16 5.3c-.67-2.68-1.26-5.3-1.76-7.88Zm110.42 27.27a347.8 347.8 0 0 0-7.78-12.8c8.17 1.02 16 2.4 23.34 4.07a233.6 233.6 0 0 1-8.2 22.05c-2.31-4.41-4.77-8.86-7.36-13.32Zm-45.03-43.87a233.78 233.78 0 0 1 15.07 18.19 322.04 322.04 0 0 0-30.26 0 241.25 241.25 0 0 1 15.2-18.19ZM82.8 87.83c-2.53 4.39-4.94 8.8-7.22 13.24a241.43 241.43 0 0 1-8.14-22.15c7.3-1.64 15.1-2.97 23.21-3.99-2.69 4.2-5.31 8.5-7.85 12.9Zm8.08 65.35c-8.38-.93-16.29-2.2-23.59-3.79 2.26-7.3 5.05-14.88 8.3-22.6a323.2 323.2 0 0 0 15.3 26.4Zm37.54 31.03a245.48 245.48 0 0 1-15.4-18.43 347.67 347.67 0 0 0 30.43-.05 232.63 232.63 0 0 1-15.03 18.48Zm52.2-57.81a232 232 0 0 1 8.6 22.52 232.35 232.35 0 0 1-23.88 4.07c2.66-4.21 5.28-8.56 7.86-13.03a347.4 347.4 0 0 0 7.42-13.56Zm-16.9 8.1c-4 6.94-8.1 13.56-12.28 19.81-7.6.54-15.44.82-23.44.82-7.97 0-15.72-.24-23.18-.73a307.41 307.41 0 0 1-23.43-40.47 307.32 307.32 0 0 1 23.3-40.4 307.62 307.62 0 0 1 46.66 0 329.36 329.36 0 0 1 12.34 19.7c4.01 6.94 7.7 13.8 11.03 20.55-3.32 6.85-7 13.79-11 20.72Zm22.56-122.13c8.58 4.95 11.91 24.88 6.52 51.03-.34 1.67-.73 3.37-1.15 5.09a261.97 261.97 0 0 0-34.22-5.4 256.9 256.9 0 0 0-21.65-27.02c1.97-1.89 3.94-3.7 5.9-5.4 18.9-16.44 36.56-22.94 44.6-18.3ZM128 90.81a22.86 22.86 0 1 1 0 45.72 22.86 22.86 0 0 1 0-45.72Z",
  },
  terraform: {
    size: 256,
    d: "M176.49 188.99 256 143.13V51.25l-79.51 45.96zM88.24 51.25l79.52 45.96V189l-79.52-45.91M0 91.83l79.52 45.92V45.92L0 0m88.24 245 79.52 45.9v-91.82l-79.52-45.92",
  },
};

export type IconType = keyof typeof ICON_PATHS;

function randomMinMaxSigned(random: PRNG, min: number, max: number): number {
  const n = random() * 2 - 1;
  const isNegative = n < 0;
  const abs = Math.abs(n);

  const value = abs * (max - min) + min;
  return value * (isNegative ? -1 : 1);
}

interface CreateIconMaskOptions {
  id: string;
  random: PRNG;
  iconMaskId: IconType;
  minIconSize: number;
  maxIconSize: number;
  width: number;
  height: number;
}

export function IconMask({
  id,
  random,
  iconMaskId,
  minIconSize,
  maxIconSize,
  width,
  height,
}: CreateIconMaskOptions) {
  // For now, hardcoded list of where icons should be.
  // I originally thought of having a few, but for now I'll just stick with a central one
  const iconPositions: Point2[] = [
    // { x: minIconSize, y: (height * 3) / 4 },
    { x: width / 2, y: height * 0.6 },
    // { x: width - minIconSize, y: (height * 3) / 4 }
  ];

  const icon = ICON_PATHS[iconMaskId];

  const paths = icon
    ? iconPositions.map((basePosition, i) => {
        // TODO: reintroduce multiple icons
        // const icon = arrayRandom(icon, random)

        const scale =
          (random() * (maxIconSize - minIconSize) + minIconSize) / icon.size;
        const trueSize = scale * icon.size;

        const topLeft: Point2 = {
          x: basePosition.x - trueSize / 2,
          y: basePosition.y - trueSize / 2,
        };
        topLeft.x +=
          randomMinMaxSigned(
            random,
            ICON_MIN_TRANSLATE_X,
            ICON_MAX_TRANSLATE_X,
          ) * trueSize;
        topLeft.y +=
          randomMinMaxSigned(
            random,
            ICON_MIN_TRANSLATE_Y,
            ICON_MAX_TRANSLATE_Y,
          ) * trueSize;

        const centrePoint: Point2 = {
          x: icon.size / 2,
          y: icon.size / 2,
        };

        const rotation = randomMinMaxSigned(
          random,
          ICON_MIN_ROTATE,
          ICON_MAX_ROTATE,
        );

        return (
          <path
            key={i}
            d={icon.d}
            fill="#000000"
            opacity="0.8"
            transform={`translate(${topLeft.x} ${topLeft.y}) scale(${scale}) rotate(${rotation} ${centrePoint.x} ${centrePoint.y})`}
          />
        );
      })
    : [];

  return (
    <mask id={id}>
      <rect x="0" y="0" width={width} height={height} fill="#FFFFFF" />
      {paths}
    </mask>
  );
}
