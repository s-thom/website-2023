---
import { Image } from "astro:assets";
import profile2023 from "../resources/profile-2023.jpg";
import DefaultPageBackdrop from "./site/DefaultPageBackdrop.astro";
import DefaultPageHeader from "./site/DefaultPageHeader.astro";
import type { PageMetaType } from "./PageMeta.astro";
import HeaderBackdropMask from "./HeaderBackdropMask.astro";

export interface LinkInfo {
  url: string;
  name: string;
}

export interface Props {
  navItems?: LinkInfo[];
  breadcrumbs?: LinkInfo[];
  header?: PageMetaType["header"];
}

const { navItems, /* breadcrumbs, */ header } = Astro.props;
---

<div class="header-area">
  <div class="site-header-container">
    <header class="site-header">
      <a href="/" class="site-name">
        <Image
          src={profile2023}
          alt="Stuart Thomson smiling, with water and hills in the background"
          class="profile-photo"
          densities={[1, 1.5, 2]}
          loading="eager"
        />
        <h1 class="site-name-heading">Stuart Thomson</h1>
      </a>

      {
        navItems && (
          <nav aria-label="Main">
            <ul class="nav-list">
              {navItems.map((navItem) => (
                <li class="nav-item">
                  <a href={navItem.url}>{navItem.name}</a>
                </li>
              ))}
            </ul>
          </nav>
        )
      }

      <!-- {
        breadcrumbs && (
          <nav aria-label="Breadcrumbs">
            <ol class="breadcrumb-list">
              {breadcrumbs.map((breadcrumb) => (
                <li class="breadcrumb">
                  <a href={breadcrumb.url}>{breadcrumb.name}</a>
                </li>
              ))}
            </ol>
          </nav>
        )
      } -->
    </header>

    <div class="page-header-container">
      <slot name="page-header">
        <DefaultPageHeader />
      </slot>
    </div>

    <div class="backdrop-container">
      <HeaderBackdropMask
        id="header-mask"
        class="header-mask"
        seed={header?.seed ?? "default"}
        maskType={header?.maskType ?? "none"}
        iconType={header?.iconType ?? "none"}
      >
        <slot name="page-backdrop">
          <DefaultPageBackdrop />
        </slot>
      </HeaderBackdropMask>
    </div>
  </div>
</div>

<style>
  .header-area {
    margin-bottom: var(--spacing-half);
    grid-column: var(--area-full-bleed) !important;
    min-height: var(--height-header);
  }

  .site-header-container {
    color: var(--color-text-header);
    position: relative;
    display: grid;
    /* Remember to duplicate to src/css/layout.css */
    grid-template-columns:
      [l-edge] var(--spacing) /* Gutter */
      [l-wide-bleed] 1fr /* Centring  */
      [l-small-bleed] minmax(auto, 15ch)
      /* Small bleed for special elements */
      [content-column] min(65ch, calc(100% - (2 * var(--spacing))))
      /* Content */
      minmax(auto, 15ch)
      [r-small-bleed] /* Small bleed for special elements */
      1fr [r-wide-bleed] /* Centring */
      var(--spacing) [r-edge]; /* Gutter */
  }

  .page-header-container {
    grid-column: content-column;
  }

  .backdrop-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: var(--height-header);
    z-index: -1;
    overflow: hidden;
  }
  .backdrop-container :global(.header-mask) {
    position: relative;
    left: 50%;
    transform: translateX(-50%);
  }

  .site-header-container :global(.header-backdrop) {
    position: absolute;
    z-index: -1;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    grid-column: var(--area-full-bleed) !important;
    grid-row: 1 !important;
    overflow: hidden;
  }

  .site-header {
    grid-column: var(--area-header) !important;
    grid-row: 1 !important;
    padding: var(--spacing);
    min-height: var(--height-header-min);
  }

  .site-name {
    display: flex;
    gap: var(--spacing);
    align-items: center;
  }

  .site-name,
  .nav-list,
  .breadcrumb-list {
    justify-content: center;
  }

  @media (min-width: 900px) {
    .site-name,
    .nav-list,
    .breadcrumb-list {
      justify-content: start;
    }
  }

  .profile-photo {
    width: calc(var(--spacing) * 2);
    height: calc(var(--spacing) * 2);
    border-radius: 50%;
  }

  h1.site-name-heading {
    font-size: var(--size-step-3) !important;
  }

  @media (min-width: 900px) {
    .profile-photo {
      width: calc(var(--spacing) * 3);
      height: calc(var(--spacing) * 3);
    }
  }

  .nav-list {
    display: flex;
    list-style: none;
    gap: var(--spacing);
    padding-left: 0 !important;
  }

  .breadcrumb-list {
    display: flex;
    flex-wrap: wrap;
    list-style: none;
    gap: 0.5em;
    font-style: italic;
    font-size: var(--size-step-min1);
    padding-left: 0 !important;
  }

  .breadcrumb:not(:last-child)::after {
    content: "Â»";
    padding-inline-end: 0.5em;
  }
</style>
