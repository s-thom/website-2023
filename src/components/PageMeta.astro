---
import type { IconType, MaskType } from "./react/SvgMask/index.tsx";

export interface PageMetaType {
  title: string;
  description?: string;
  url: string;
  imageUrl?: string;
  rssUrl?: string;
  header?: {
    seed: string;
    maskType: MaskType;
    iconType: IconType;
  };
  noCrawl?: boolean;
}

const FAVICON_SIZES = [16, 64, 96, 128];
const APPLE_ICON_SIZES = [144, 180, 192, 512];

export interface Props {
  meta: PageMetaType;
}

const { meta } = Astro.props;
const { title, description, url, imageUrl, rssUrl, noCrawl } = meta;

const canonicalURL = new URL(url, Astro.site);
const sitemapURL = new URL("/sitemap.xml", Astro.site);
---

<meta property="og:type" content="website" />
<meta property="og:site_name" content="Stuart Thomson" />

<title>{title}</title>
<meta property="og:title" content={title} />
<meta name="twitter:title" content={title} />

{noCrawl && <meta name="robots" content="noindex" />}

<link rel="canonical" href={canonicalURL} />
<meta property="og:url" content={canonicalURL} />
<meta property="twitter:url" content={canonicalURL} />

{
  description && (
    <>
      <meta name="description" content={description} />
      <meta property="og:description" content={description} />
      <meta name="twitter:description" content={description} />
    </>
  )
}

{
  imageUrl ? (
    <>
      <meta name="twitter:card" content="summary_large_image" />
      <meta name="twitter:image" content={imageUrl} />
      <meta property="og:image" content={imageUrl} />
    </>
  ) : (
    <meta name="twitter:card" content="summary" />
  )
}

{
  rssUrl && (
    <link
      rel="alternate"
      type="application/rss+xml"
      href={rssUrl}
      title="Stuart Thomson"
    />
  )
}

<link rel="manifest" href="/manifest.json" />
<link rel="sitemap" href={sitemapURL} />

<link rel="icon" href="/favicon.ico" />
{
  FAVICON_SIZES.map((size) => (
    <link
      rel="icon"
      type="image/png"
      sizes={`${size}x${size}`}
      href={`/static/icons/build/favicon-${size}x${size}.png`}
    />
  ))
}
{
  APPLE_ICON_SIZES.map((size) => (
    <link
      rel="apple-touch-icon"
      type="image/png"
      sizes={`${size}x${size}`}
      href={`/static/icons/build/apple-icon-${size}x${size}.png`}
    />
  ))
}

<script
  is:inline
  async
  defer
  data-do-not-track="true"
  data-website-id="5384fcb9-84be-4d5e-8dba-20d4e862bf19"
  data-domains="sthom.kiwi"
  src="https://stats.sthom.kiwi/script.js"></script>
