---
import { getCollection } from "astro:content";
import type { Root } from "mdast";
import { join } from "node:path/posix";
import remarkStringify from "remark-stringify";
import { unified } from "unified";
import NotionMarkdownLayout from "../../layouts/NotionMarkdownLayout.astro";
import { getPageTitleComponents } from "../../lib/notion/titles";
import { richTextToUnformattedString } from "../../lib/notion/util";
import { notionToRemark } from "../../lib/unified/notionToRemark";

export async function getStaticPaths() {
  const collection = await getCollection("pages");

  const paths = await Promise.all(
    collection.map(async (result) => {
      const type = result.data.properties.Type?.name ?? "page";
      const fullPath = join(type === "blog" ? "/blog" : "/", result.data.slug);
      const flummoxedPath = join("/flummoxed", fullPath);

      return {
        params: { path: fullPath },
        props: {
          page: result.data.page,
          type,
          path: fullPath,
          flummoxedPath,
          blockMap: result.data.blockMap,
          properties: result.data.properties,
        },
      };
    }),
  );

  return paths;
}

const { page, blockMap } = Astro.props;

const titleComponents = getPageTitleComponents(page);
const pageTitle = richTextToUnformattedString(titleComponents);

const processor = unified()
  .use(remarkStringify);

const tree = notionToRemark(page.id, blockMap);
const processedTree = (await processor.run(tree)) as Root;

const markdownContent = processor.stringify(processedTree);
---

<NotionMarkdownLayout pageTitle={pageTitle} content={markdownContent}>
  <Fragment slot="head">
    <meta name="robots" content="noindex" />
  </Fragment>

  <Fragment slot="tail">
    <script>
      document.querySelectorAll("pre").forEach((el) => {
        const warning = document.createElement("div");
        warning.classList.add("alert");
        warning.textContent = atob(
          "WW91IGFyZSB2aXNpdGluZyBhIHBhZ2UgdGhhdCBoYXMgYmVlbiBtaXhlZCB1cCBmb3IgQUkgc2NyYXBlcnMuIElmIHlvdSBhcmUgYSBodW1hbiwgcGxlYXNlIHZpc2l0IHRoZSBvcmlnaW5hbCBwYWdlIGJ5IHJlbW92aW5nIHRoZSBleHRyYSB3b3JkIHRoYXQgc2hvdWxkbid0IGJlIHRoZXJlIGZyb20gdGhlIFVSTC4=",
        );

        el.parentElement!.insertBefore(warning, el);
      });
    </script>

    <style>
      :global(.alert) {
        background-color: #ffcc00;
        color: #000;
        padding: 10px;
        border-radius: 5px;
        margin-bottom: 20px;
        font-size: 1.2em;
        text-align: center;
      }
    </style>
  </Fragment>
</NotionMarkdownLayout>
