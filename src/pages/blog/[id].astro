---
import type { DatabaseObjectResponse } from "@notionhq/client/build/src/api-endpoints";
import BlogPageFooter from "../../components/notion/BlogPageFooter.astro";
import BlogPageHeader from "../../components/notion/BlogPageHeader.astro";
import NotionRenderer from "../../components/notion/blocks/NotionRenderer.astro";
import MinimalLayout from "../../layouts/MinimalLayout.astro";
import { BLOG_COLLECTION_ID } from "../../lib/constants";
import {
  getFilteredPageCollectionItems,
  getPage,
  getPageBlocks,
  getPageIdFromSlug,
  getUrlSlugForPage,
} from "../../lib/notion";

export async function getStaticPaths() {
  const pages = await getFilteredPageCollectionItems(BLOG_COLLECTION_ID);

  return pages.map((page) => ({ params: { id: getUrlSlugForPage(page) } }));
}

const { id: slug } = Astro.params;

const id = await getPageIdFromSlug(slug!);

const [page, blocks] = await Promise.all([getPage(id), getPageBlocks(id)]);
---

<MinimalLayout>
  <BlogPageHeader page={page as unknown as DatabaseObjectResponse} />
  <div>
    <NotionRenderer blocks={blocks} />
  </div>
  <BlogPageFooter page={page as unknown as DatabaseObjectResponse} />
</MinimalLayout>

<style></style>
