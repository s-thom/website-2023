---
import type { DatabaseObjectResponse } from "@notionhq/client/build/src/api-endpoints";
import NotionRenderer from "../../components/notion/blocks/NotionRenderer.astro";
import NotionBlogLayout from "../../layouts/NotionBlogLayout.astro";
import { getFilteredBlogItems } from "../../lib/notion/blog";
import {
  getBlockChildren,
  getInfoForPage,
  getPage,
  getPageIdFromSlug,
} from "../../lib/notion/caches";
import { getComponentOverrides } from "../../lib/notion/overrides";

export async function getStaticPaths() {
  const results = await getFilteredBlogItems({
    allowUnpublished: import.meta.env.DEV,
    allowUnlisted: true,
  });

  const paths = await Promise.all(
    results.map(async (result) => {
      const info = await getInfoForPage(result.id);

      return {
        params: { slug: info.slug },
      };
    }),
  );

  return paths;
}

const { slug } = Astro.params;

const id = await getPageIdFromSlug(slug!);

const [page, blocks] = await Promise.all([getPage(id), getBlockChildren(id)]);
const overrides = await getComponentOverrides(id);
---

<NotionBlogLayout page={page as unknown as DatabaseObjectResponse}>
  <NotionRenderer blocks={blocks} overrides={overrides} />
</NotionBlogLayout>

<style></style>
