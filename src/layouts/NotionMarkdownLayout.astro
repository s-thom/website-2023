---
import type { PageObjectResponse } from "@notionhq/client/build/src/api-endpoints";
import type { Root } from "mdast";
import remarkStringify from "remark-stringify";
import { unified } from "unified";
import type { BlockInfo } from "../integrations/notion-loader/api";
import { getPageTitleComponents } from "../lib/notion/titles";
import { richTextToUnformattedString } from "../lib/notion/util";
import { notionToRemark } from "../lib/unified/notionToRemark";
import MinimalLayout from "./MinimalLayout.astro";

export interface Props {
  page: PageObjectResponse;
  blockMap: Record<string, BlockInfo>;
}

const { page, blockMap } = Astro.props;

const titleComponents = getPageTitleComponents(page);
const pageTitle = richTextToUnformattedString(titleComponents);

const processor = unified().use(remarkStringify);

const tree = notionToRemark(page.id, blockMap);
const processedTree = (await processor.run(tree)) as Root;

const markdownContent = processor.stringify(processedTree);
---

<MinimalLayout>
  <Fragment slot="head">
    <title>{pageTitle}</title>
    <slot name="head" />
  </Fragment>

  <pre>
{markdownContent}
  </pre>

  <style>
    pre {
      text-wrap: auto;
    }
  </style>

  <slot name="tail" />
</MinimalLayout>
